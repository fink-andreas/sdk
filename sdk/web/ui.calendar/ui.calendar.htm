<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>ui.calendar</title>
    <link rel="stylesheet" href="../lib/innovaphone.lib.css" type="text/css" />
    <link rel="stylesheet" href="../styles/innovaphone.Styles.css" type="text/css" />
    <link rel="stylesheet" href="../lib/innovaphone.doc.css" type="text/css" />
    <script src="../lib/innovaphone.lib.js" type="text/javascript"></script>
    <script src="../ui.container/innovaphone.ui.Container.js" type="text/javascript"></script>
    <script src="../ui.text/innovaphone.ui.Text.js" type="text/javascript"></script>
    <script src="../ui.icon/innovaphone.ui.Icon.js" type="text/javascript"></script>
    <script src="../ui.grid/innovaphone.ui.Grid.js" type="text/javascript"></script>
    <script src="innovaphone.ui.CalendarDayItemIndicator.js" type="text/javascript"></script>
    <script src="innovaphone.ui.FlatButton.js" type="text/javascript"></script>
    <script src="innovaphone.ui.Calendar.js" type="text/javascript"></script>
    <script type="text/javascript">
        function Try() {
            var out = document.getElementById('out');
            out.innerText = "";
            eval(document.getElementById('code').value);
        }
    </script>
</head>

<body>
    <h1>ui.calendar</h1>
    <button onclick="Try()">Try</button>
    <div style="position:relative; height:420px">
        <textarea id="code" style="position: absolute; left: 0px; top: 0px; width: 600px; height: 400px; border: 1px solid grey; font-family: Lucida Console">
label = document.createElement("div");
label.innerHTML = "Please change the visible month or the selected day";
out.appendChild(label);

theStrings = {
    "daySundayShort": "Sun",
    "dayMondayShort": "Mon",
    "dayTuesdayShort": "Tue",
    "dayWednesdayShort": "Wed",
    "dayThursdayShort": "Thu",
    "dayFridayShort": "Fri",
    "daySaturdayShort": "Sat",
    "daySunday": "Sunday",
    "dayMonday": "Monday",
    "dayTuesday": "Tuesday",
    "dayWednesday": "Wednesday",
    "dayThursday": "Thursday",
    "dayFriday": "Friday",
    "daySaturday": "Saturday",
    "monthJanuaryShort": "Jan.",
    "monthFebruaryShort": "Feb.",
    "monthMarchShort": "Mar.",
    "monthAprilShort": "Apr.",
    "monthMayShort": "May",
    "monthJuneShort": "June",
    "monthJulyShort": "July",
    "monthAugustShort": "Aug.",
    "monthSeptemberShort": "Sept.",
    "monthOctoberShort": "Oct.",
    "monthNovemberShort": "Nov.",
    "monthDecemberShort": "Dec.",
    "monthJanuary": "January",
    "monthFebruary": "February",
    "monthMarch": "March",
    "monthApril": "April",
    "monthMay": "May",
    "monthJune": "June",
    "monthJuly": "July",
    "monthAugust": "August",
    "monthSeptember": "September",
    "monthOctober": "October",
    "monthNovember": "November",
    "monthDecember": "December"
};

/* A normal calendar */
calendar = new innovaphone.ui.Calendar(5, 35, theStrings, false, "ISO", false, out);
calendar.setBorder(1);

calendar.setOnVisibleMonthChanged(function(month, year, obj) {
    label.innerHTML = "(Calendar) Visible month changed to " + month + "/" + year;
}, null);

calendar.setOnSelectedDayChanged(function(newDate, obj) {
    label.innerHTML = "(Calendar) Selected date changed to " + newDate.toDateString();
}, null);


/* A small sized calendar */
calendarS = new innovaphone.ui.Calendar(285, 35, theStrings, true, out);
calendarS.setBorder(1);
calendarS.setOnVisibleMonthChanged(function(month, year, obj) {
    label.innerHTML = "(Small-Calendar) Visible month changed to " + month + "/" + year;
}, null);

calendarS.setOnSelectedDayChanged(function(newDate, obj) {
    label.innerHTML = "(Small-Calendar) Selected date changed to " + newDate.toDateString();
}, null);</textarea>
        <div id="out" style="position:absolute; left:610px; top:0px; width:600px; height:400px; border:1px solid grey">

        </div>
    </div>
    <h2> innovaphone.ui.Calendar(left, top, strings, smallSize, weekNumType, sundayIsFirstDay, parent) </h2>

    <ul>
        Creates a calendar control that allows the user to select a date and a month. There are two versions of
		the control - the normal version with a size of 274x289 pixels and a small version with 178x147 pixels.
		The difference between the two versions it the missing footer line of the calendar that holds the current
		selected day as well as the posibility to add additional infos (like dots in different colors - [not implemented
		yet]) to each day. Also the design variates a little bit. The rest of the funcionallity is the same for both
		of them.<br>
		The user can use the arrows to change the visible month. By clicking on a day, the user can select the day.
		Changing the visible month or selecting a day will lead to a callback, if the application registeres for one.
		The footer line of the standard sized calendar will show the currently selected day. The user can click on that
		line to view the month and year of that day again, if the current visible month had been changed.
    </ul>
	<h2>Requirements</h2>
	<dl>
		If you whant to use the calendar, you also need to include the following controls:
		<ul>
			<li>innovaphone.ui.Container</li>
			<li>innovaphone.ui.Text</li>
			<li>innovaphone.ui.Icon</li>
			<li>innovaphone.ui.Grid</li>
		</ul>
	</dl>
	<h2>Arguments</h2>
	<dl>
		<dt>left</dt>
		<dd>
			The left position of the control inside the container where it will be added to.
		</dd>
		
		<dt>top</dt>
		<dd>
			The top position of the control inside the container where it will be added to.
		</dd>
		
		<dt>strings</dt>
		<dd>
			The calender need a set of strings that will be used to display the month / day names. For this, strings need
			to be a json object holding the strings. The following fields must be part of the given object:
			<ul>
				<li><b>daySundayShort:</b> The short name for Sunday</li>
				<li><b>dayMondayShort:</b> The short name for Monday</li>
				<li><b>dayTuesdayShort:</b> The short name for Tuesday</li>
				<li><b>dayWednesdayShort:</b> The short name for Wednesday</li>
				<li><b>dayThursdayShort:</b> The short name for Thursday</li>
				<li><b>dayFridayShort:</b> The short name for Friday</li>
				<li><b>daySaturdayShort:</b> The short name for Saturday</li>
				<li><b>daySunday:</b> The name for Sunday</li>
				<li><b>dayMonday:</b> The name for Monday</li>
				<li><b>dayTuesday:</b> The name for Tuesday</li>
				<li><b>dayWednesday:</b> The name for Wednesday</li>
				<li><b>dayThursday:</b> The name for Thursday</li>
				<li><b>dayFriday:</b> The name for Friday</li>
				<li><b>daySaturday:</b> The name for Saturday</li>
				<li><b>monthJanuaryShort:</b> The short name for January</li>
				<li><b>monthFebruaryShort:</b> The short name for February</li>
				<li><b>monthMarchShort:</b> The short name for March</li>
				<li><b>monthAprilShort:</b> The short name for April</li>
				<li><b>monthMayShort:</b> The short name for May</li>
				<li><b>monthJuneShort:</b> The short name for June</li>
				<li><b>monthJulyShort:</b> The short name for July</li>
				<li><b>monthAugustShort:</b> The short name for August</li>
				<li><b>monthSeptemberShort:</b> The short name for September</li>
				<li><b>monthOctoberShort:</b> The short name for October</li>
				<li><b>monthNovemberShort:</b> The short name for November</li>
				<li><b>monthDecemberShort:</b> The short name for December</li>
				<li><b>monthJanuary:</b> The name for January</li>
				<li><b>monthFebruary:</b> The name for February</li>
				<li><b>monthMarch:</b> The name for March</li>
				<li><b>monthApril:</b> The name for April</li>
				<li><b>monthMay:</b> The name for May</li>
				<li><b>monthJune:</b> The name for June</li>
				<li><b>monthJuly:</b> The name for July</li>
				<li><b>monthAugust:</b> The name for August</li>
				<li><b>monthSeptember:</b> The name for September</li>
				<li><b>monthOctober:</b> The name for October</li>
				<li><b>monthNovember:</b> The name for November</li>
				<li><b>monthDecember:</b> The name for December</li>
			</ul>
		</dd>

		<dt>smallSize</dt>
		<dd>
			If true, the calender will be rendered in a smaler size (178x147 pixels). This is useful if you whant to have a compact solition to let the user pick a day or to simply show all days of a specified month. Beside the fact that everything is a little bit smaler, the footer line will not be visible in the smallSize calendar.
		</dd>
		
        <dt>weekNumType</dt>
        <dd>
            The method to use for the calculation of the week numbers. Has to be one of the following values:
            <ul>
                <li><b>ISO:</b> Like defined in ISO 8601, the week with the first Thursday will be the first week of the year. NOTE: Because ISO 8601 defines monday as first day of the week, you should take care thet calGridSundayIsFirstDay is set to false if using ISO for calWeekNumCalcMethod, or each Sunday will displayed in the wrong week!</li>
                <li><b>1JAN:</b> The first week of the year is the week that holds the 1st January. The week starts with Monday or Sonday, depending on the value of calGridSundayIsFirstDay.</li>
                <li><b>1WEEK:</b>The first week of the year is the first complete week, from Monday to Sunday (if calGridSundayIsFirstDay is false) or Sunday to Saturday (if calGridSundayIsFirstDay is true).</li>
            </ul>
        </dd>

        <dt>sundayIsFirstDay</dt>
        <dd>
            Flag that defines if sunday should be the first day to be displayed (sundayIsFirstDay) or monday. Not the if weekNumType is ISO, monday will automaticaly
            the first day of the week as defined in the ISO standard.
        </dd>

		<dt>parent</dt>
		<dd>
			The parent where the control will be added to. If null is given as parent, the control
			needs to be added manually by using the container member of the control. 
		</dd>
	</dl>
	
    <h2>Members</h2>
    <dl>
        <dt>container</dt>
		<dd>
			Returns the container of the control. This can be used to add the controls to other html containers.
        </dd>
    </dl>
    <h2>Functions</h2>
    <dl>
		<dt>setOnVisibleMonthChanged(onVisMonthChangedFnc, obj)</dt>
		<dd>
			Will set a callback function that will be called each time the month, displayed by the calendar, will be changed. The function will be called with three parameters:<br>
			<b><i>onVisMonthChangedFnc(visMonth, visYear, obj)</i></b><br>
			visMonth will be the number of the visible month (1-12), visYear the visible year (in fullyear format, e. G. 2016). As third parameter, the given value of obj will be passed.
		</dd>
	
		<dt>setOnSelectedDayChanged(onSelDayChangedFnc, obj)</dt>
		<dd>
			Will set the callback function that will be called each time the user selects an other day. The function will be called with two parameters:<br>
			<b><i>onSelDayChangedFnc(newDate, obj)</i></b><br>
			Where new date is an JavaScript Date object holding the selected day (the time parts are set to zero). As second parameter obj will be passed.
		</dd>
	
		<dt>setDate(theDate)</dt>
		<dd>
			Set the current visible date to the on passed to the function. The parameter theDate needs to be a JavaScript Date object.
		</dd>
	
        <dt>setBorder(borderWidth)</dt>
        <dd>
			Set the width of the border of the control. Passing 0 ti borderWidth will remove the border. By default, the calendar wont have a border.
        </dd>

        <dt>dayOneCellIndex()</dt>
        <dd>
            Returns the index of the cell of the first day of the current visible month.
        </dd>

        <dt>curMonthNumOfDays()</dt>
        <dd>
            Returns the number of days of the current visible month.
        </dd>

        <dt>getDayCell(idx)</dt>
        <dd>
            Returns the cell inside the calendars grid with the given index. Note that there are 42 cells, so idx has to be between 0 and 41.
            Call dayOneCellIndex() to no the cell where the current visible week starts as well as curMonthNumOfDays to know how much cells
            the month has.
        </dd>

</body>
</html>
