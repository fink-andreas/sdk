<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>ui.elementscontainer</title>
    <link rel="stylesheet" href="../lib/innovaphone.lib.css" type="text/css" />
    <link rel="stylesheet" href="../styles/innovaphone.Styles.css" type="text/css" />
    <link rel="stylesheet" href="../lib/innovaphone.doc.css" type="text/css" />
    <script src="../lib/innovaphone.lib.js" type="text/javascript"></script>
    <script src="../ui.text/innovaphone.ui.Text.js" type="text/javascript"></script>
    <script src="../ui.input/innovaphone.ui.Input.js" type="text/javascript"></script>
    <script src="innovaphone.ui.ElementsContainer.js" type="text/javascript"></script>

    <script type="text/javascript">
        function Try() {
            var out = document.getElementById('out');
            out.innerText = "";
            eval(document.getElementById('code').value);
        }
    </script>
</head>

<body>
    <h1>ui.elementscontainer</h1>
    <button onclick="Try()">Try</button>
    <div style="position:relative; height:420px">
        <textarea id="code" style="position: absolute; left: 0px; top: 0px; width: 600px; height: 400px; border: 1px solid grey; font-family: Lucida Console">
var e = new innovaphone.ui.ElementsContainer(null, 2);
var label1 = new innovaphone.ui.Text("Label 1 which is quite long");
var label2 = new innovaphone.ui.Text("Label 2");
var input1 = new innovaphone.ui.Input();
var input2 = new innovaphone.ui.Input();

e.addElement(label1.container);
e.addElement(input1.container);
e.addElement(label2.container);
e.addElement(input2.container);

out.appendChild(e.container);
e.adjustColumnWidth(1);
        </textarea>
        <div id="out" style="position:absolute; left:610px; top:0px; width:600px; height:400px; border:1px solid grey">

        </div>
    </div>
    <h2> innovaphone.ui.ElementsContainer(container, columnCount, verticalAlignment) </h2>
    <p>
        This is a container element, where elements can be added to a column like layout or with absolute positions.
    </p>

    <dl>
        <dt>container</dt>
        <dd>
        </dd>
        <dt>columnCount</dt>
        <dd>
        </dd>
        <dt>[verticalAlignment]</dt>
        <dd>
            how elements are vertical aligned inside the container, e.g. '''middle'''
        </dd>

        <dt>addElement(element, fillLine)</dt>
        <dd>
            adds an element. If the position of the element is absolute, it is just added to the container, if not the column like layout is applied: If one row is already full, a new row will be added automatically
            <dl>
                <dt>element</dt>
                <dd>
                    the element container
                <dt>[fillLine]</dt>
                <dd>
                    boolean, controls if the added element uses the next columns too
                </dd>
            </dl>
        </dd>

        <dt>adjustColumnWidth(column)</dt>
        <dd>
            adjusts the width of all elements inside the given column to the width of the widest element,<br />
            call this function if the container is already inside the DOM tree, otherwise the width <br />
            calculation will fail!
        </dd>

        <dt>setRowMargin(margin)</dt>
        <dd>
            default margin between each row is 5
        </dd>
        <dt>setColumnMargin(margin)</dt>
        <dd>
            default margin between each column is 10
        </dd>
        <dt>setBorder (borderWidth)</dt>
        <dd>
            to get a bordered Container, default border width is 1px 
        </dd>
        <dt>setWidth (width)</dt>
        <dd>
            sets the width of the container element
        </dd>
        <dt>setHeight (height)</dt>
        <dd>
            sets the height of the container element
        </dd>
        <dt>setMinHeight (height)</dt>
        <dd>
            sets the minimum height of the container element
        </dd>
    </dl>
</body>
</html>
