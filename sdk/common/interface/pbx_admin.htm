<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>dns</title>
    <link rel="stylesheet" href="../../web/lib1/innovaphone.doc.css" type="text/css" />
</head>

<body>
    <h1>PBX Admin</h1>
    <h2>Overview</h2>
    <p>
        IPbxAdminApi is an interface, which provides administrative access to the PBX. It uses the Websocket/Json
        interface "PbxAdmin". To be able to use this interface inside an App Service, a Websocket connection
        from the PBX has to exist. For this connection access to the "PbxAdminApi" has to be granted
    </p>
    <h2>Tutorial</h2>
    <h3>Step1: Add JsonApiContext as base class to your App Instance class (if not already)</h3>
    <p>
        For all websocket sessions potentially providing this API there must be an instance of
        JsonApiContext, which is provided as argument to the AppWebsocket constructor
<pre>
class &lt;Your App Name&gt;</> : public AppInstance, ... , public JsonApiContext
</pre>
    </p>
    <h3>Step2: Add code to create the PbxAdminApi and register it to the JSON Api framework</h3>
    <p>
        Inside the App Instance constructor add
<pre>
    pbxAdminApi = IPbxAdminApi::Create(0);
    RegisterJsonApi(pbxAdminApi);
</pre>
    </p>
    <h3>Step3: Use the interface functions provided by the IPbxAdminApi class</h3>
    <h2>Reference</h2>
    <h3>class IPbxAdminApi</h3>
    <dl>
        <dt>static class IPbxAdminApi * Create(const char * pbx)</dt>
        <dd>
            Static function to create an PbxAdminApi object. The argument pbx is used to identify the
            PBX, for which this instance of PbxAdminApi should be used. It is a name with the format
            &lt;PBX name&gt;@&lt;domain&gt;. If null is provided, the PBX is not checked. This is a
            valid option if only one PBX connects to a given App Instance.
        </dd>
        <dt>void MonitorAdminObject(class UPbxMonitorAdminObject * monitor)</dt>
        <dd>
            Configures monitoring of the PBX admin object. The admin object inside the PBX is used to
            store security related information. The UPbxMonitorAdminObject class is used for callbacks
            on changes of this information.
            <br/>
            If null is provided as argument, the monitoring is stopped.
        </dd>
    </dl>
    <h3>class UPbxMonitorAdminObject</h3>
    <p>
        class to be used as base class in app code to implement callbacks
    </p>
    <dl>
        <dt>void PbxAdminObjectUpdate(const char * pwd, const char * key)</dt>
        <dd>
            Called after monitoring is configured to provide the PBX pwd/key pair and whenever this
            information changes.
            <br/>
            pwd and key are provided as 16 byte hex strings (32 characters).
        </dd>
    </dl>
</body>
</html>
